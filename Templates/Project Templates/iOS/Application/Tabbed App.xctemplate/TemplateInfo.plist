<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Kind</key>
    <string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
    <key>Identifier</key>
    <string>com.apple.dt.unit.tabbedApplication</string>
    <key>Ancestors</key>
    <array>
        <string>com.apple.dt.unit.cocoaTouchApplicationBase</string>
        <string>com.apple.dt.unit.coreDataCocoaTouchApplication</string>
        <string>com.apple.dt.unit.sceneLifecycleApplication</string>
    </array>
    <key>Concrete</key>
    <true/>
    <key>Description</key>
    <string>This template provides a starting point for an application that uses a tab bar. It provides a user interface configured with a tab bar controller, and view controllers for the tab bar items.</string>
    <key>SortOrder</key>
    <integer>22</integer>
    <key>NameOfInitialFileForEditor</key>
    <string>ContentView.swift</string>
    <!-- Global nodes and definitions -->
    <key>Nodes</key>
    <array>
        <string>Info.plist:statusBarTintForNavBar</string>
    </array>
    <key>Definitions</key>
    <dict>
        <key>Assets.xcassets</key>
        <dict>
            <key>Path</key>
            <string>Images.xcassets</string>
            <key>AssetGeneration</key>
            <array>
                <dict>
                    <key>Type</key>
                    <string>appicon</string>
                    <key>Name</key>
                    <string>AppIcon</string>
                    <key>Platforms</key>
                    <dict>
                        <key>iOS</key>
                        <string>true</string>
                    </dict>
                </dict>
            </array>
            <key>SortOrder</key>
            <integer>100</integer>
        </dict>
    </dict>
    <key>Options</key>
    <array>
        <dict>
            <key>Identifier</key>
            <string>languageChoice</string>
            <key>Units</key>
            <dict>
                <key>Objective-C</key>
                <dict>
                    <!-- Stuff for languageChoice=Objective-C -->
                    <key>Nodes</key>
                    <array>
                        <string>FirstViewController.h:comments</string>
                        <string>FirstViewController.h:imports:importCocoa</string>
                        <string>FirstViewController.h:interface(___FILEBASENAME___ : UIViewController)</string>
                        <string>FirstViewController.m:comments</string>
                        <string>FirstViewController.m:imports:importHeader:FirstViewController.h</string>
                        <string>FirstViewController.m:extension</string>
                        <string>FirstViewController.m:implementation:methods:viewDidLoad(- (void\)viewDidLoad)</string>
                        <string>FirstViewController.m:implementation:methods:viewDidLoad:super</string>
                        <string>SecondViewController.h:comments</string>
                        <string>SecondViewController.h:imports:importCocoa</string>
                        <string>SecondViewController.h:interface(___FILEBASENAME___ : UIViewController)</string>
                        <string>SecondViewController.m:comments</string>
                        <string>SecondViewController.m:imports:importHeader:SecondViewController.h</string>
                        <string>SecondViewController.m:extension</string>
                        <string>SecondViewController.m:implementation:methods:viewDidLoad(- (void\)viewDidLoad)</string>
                        <string>SecondViewController.m:implementation:methods:viewDidLoad:super</string>
                        <string>Info.plist:UIMainStoryboardFile</string>
                        <string>Info.plist:UIApplicationSceneManifest:UISceneStoryboardFile</string>
                        <string>Base.lproj/Main.storyboard</string>
                    </array>
                    <key>Definitions</key>
                    <dict>
                        <key>Base.lproj/Main.storyboard</key>
                        <dict>
                            <key>Path</key>
                            <string>Main.storyboard</string>
                            <key>SortOrder</key>
                            <integer>98</integer>
                        </dict>
                        <key>Info.plist:UIMainStoryboardFile</key>
                        <string>&lt;key&gt;UIMainStoryboardFile&lt;/key&gt;
                            &lt;string&gt;Main&lt;/string&gt;
                        </string>
                    </dict>
                </dict>
                <key>Swift</key>
                <array>
                <dict>
                    <!-- Stuff for languageChoice=Swift -->
                    <key>RequiredOptions</key>
                    <dict>
                        <key>userInterface</key>
                        <string>Storyboard</string>
                    </dict>
                    <key>Nodes</key>
                    <array>
                        <string>FirstViewController.swift:comments</string>
                        <string>FirstViewController.swift:imports:importCocoa</string>
                        <string>FirstViewController.swift:implementation(___FILEBASENAME___: UIViewController)</string>
                        <string>FirstViewController.swift:implementation:methods:viewDidLoad(override func viewDidLoad(\))</string>
                        <string>FirstViewController.swift:implementation:methods:viewDidLoad:super</string>
                        <string>SecondViewController.swift:comments</string>
                        <string>SecondViewController.swift:imports:importCocoa</string>
                        <string>SecondViewController.swift:implementation(___FILEBASENAME___: UIViewController)</string>
                        <string>SecondViewController.swift:implementation:methods:viewDidLoad(override func viewDidLoad(\))</string>
                        <string>SecondViewController.swift:implementation:methods:viewDidLoad:super</string>
                        <string>Info.plist:UIMainStoryboardFile</string>
                        <string>Info.plist:UIApplicationSceneManifest:UISceneStoryboardFile</string>
                        <string>Base.lproj/Main.storyboard</string>
                    </array>
                    <key>Definitions</key>
                    <dict>
                        <key>Base.lproj/Main.storyboard</key>
                        <dict>
                            <key>Path</key>
                            <string>Main.storyboard</string>
                            <key>SortOrder</key>
                            <integer>98</integer>
                        </dict>
                        <key>Info.plist:UIMainStoryboardFile</key>
                        <string>&lt;key&gt;UIMainStoryboardFile&lt;/key&gt;
                            &lt;string&gt;Main&lt;/string&gt;
                        </string>
                    </dict>
                </dict>
                <dict>
                    <key>RequiredOptions</key>
                    <dict>
                        <key>userInterface</key>
                        <string>SwiftUI</string>
                    </dict>
                    <key>Nodes</key>
                    <array>
                        <string>ContentView.swift</string>
                        <string>Preview Content/Preview Assets.xcassets</string>
                        <string>SceneDelegate.swift:imports:importSwiftUI</string>
                        <string>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</string>
                        <string>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body:windowScene</string>
                    </array>
                    <key>Definitions</key>
                    <dict>
                        <key>ContentView.swift</key>
                        <dict>
                            <key>SortOrder</key>
                            <integer>99</integer>
                            <key>Path</key>
                            <string>ContentView.swift</string>
                        </dict>
                        <key>Preview Content/Preview Assets.xcassets</key>
                        <dict>
                            <key>SortOrder</key>
                            <integer>100</integer>
                            <key>Path</key>
                            <string>Preview Assets.xcassets</string>
                            <key>Group</key>
                            <string>Preview Content</string>
                        </dict>
                            <key>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</key>
                            <string>
// Create the SwiftUI view that provides the window contents.
let contentView = ContentView()
</string>
                            <key>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body:windowScene</key>
                            <string>
// Use a UIHostingController as window root view controller.
if let windowScene = scene as? UIWindowScene {
    let window = UIWindow(windowScene: windowScene)
    window.rootViewController = UIHostingController(rootView: contentView)
    self.window = window
    window.makeKeyAndVisible()
}</string>
                        <key>*:imports:importSwiftUI</key>
                        <string>import SwiftUI</string>
                    </dict>
                    <key>Targets</key>
                    <array>
                        <dict>
                            <key>SharedSettings</key>
                            <dict>
                                <key>ENABLE_PREVIEWS</key>
                                <string>YES</string>
                                <key>DEVELOPMENT_ASSET_PATHS</key>
                                <string>___PACKAGENAMEPREVIEWCONTENT:quoteIfNeeded___</string>
                            </dict>
                        </dict>
                    </array>
                </dict>
                    <dict>
                        <key>RequiredOptions</key>
                        <dict>
                            <key>userInterface</key>
                            <string>SwiftUI</string>
                            <key>coreData</key>
                            <string>true</string>
                        </dict>
                        <key>Nodes</key>
                        <array>
                            <string>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</string>
                        </array>
                        <key>Definitions</key>
                        <dict>
                            <key>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</key>
                            <string>
// Get the managed object context from the shared persistent container.
let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext

// Create the SwiftUI view and set the context as the value for the managedObjectContext environment keyPath.
// Add `@Environment(\.managedObjectContext)` in the views that will need the context.
let contentView = ContentView().environment(\.managedObjectContext, context)
</string>
                        </dict>
                    </dict>
                </array>
            </dict>
        </dict>
        <dict>
            <key>Identifier</key>
            <string>userInterface</string>
            <key>Name</key>
            <string>User Interface:</string>
            <key>Description</key>
            <string>The type of user interface.</string>
            <key>Values</key>
            <array>
                <string>SwiftUI</string>
                <string>Storyboard</string>
            </array>
            <key>RequiredOptionsForValues</key>
            <dict>
                <key>SwiftUI</key>
                <dict>
                    <key>languageChoice</key>
                    <string>Swift</string>
                </dict>
            </dict>
            <key>Default</key>
            <string>SwiftUI</string>
            <key>Type</key>
            <string>popup</string>
        </dict>
    </array>
</dict>
</plist>
